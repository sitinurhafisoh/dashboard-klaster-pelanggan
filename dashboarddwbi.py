# -*- coding: utf-8 -*-
"""DashboardDWBI.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1meMdg6jSe9uu6ZCmsLY-2_l_ugMLcSRQ
"""

import streamlit as st
import pandas as pd
import plotly.express as px
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans
from sklearn.metrics import silhouette_score

# Judul Aplikasi
st.title("ðŸ“Š Dashboard Clustering Pelanggan Salon")

# Upload file CSV
uploaded_file = st.file_uploader("fact_servicerevenue_new.csv", type="csv")

if uploaded_file is not None:
    df = pd.read_csv(uploaded_file)

    st.subheader("ðŸ§¼ Data Asli")
    st.dataframe(df.head())

    # Ringkasan per pelanggan
    customer_summary = df.groupby('ID Pelanggan').agg({
        'Total Pendapatan': 'sum',
        'Total Service': 'sum',
        'Harga (IDR)': 'mean'
    }).reset_index()
    customer_summary.columns = ['ID Pelanggan', 'Total Pendapatan', 'Total Service', 'Rata-rata Harga Layanan']

    # Normalisasi
    scaler = StandardScaler()
    features = customer_summary[['Total Pendapatan', 'Total Service', 'Rata-rata Harga Layanan']]
    scaled_features = scaler.fit_transform(features)

    # Clustering
    kmeans = KMeans(n_clusters=3, random_state=42)
    customer_summary['Cluster'] = kmeans.fit_predict(scaled_features)
    silhouette = silhouette_score(scaled_features, customer_summary['Cluster'])

    st.markdown(f"**âœ… Silhouette Score:** `{silhouette:.2f}` (Semakin mendekati 1, semakin baik pemisahan klasternya)")

    # Visualisasi Plot 3D
    fig = px.scatter_3d(
        customer_summary,
        x='Total Pendapatan',
        y='Total Service',
        z='Rata-rata Harga Layanan',
        color='Cluster',
        hover_data=['ID Pelanggan'],
        title='Visualisasi Clustering Pelanggan'
    )
    st.plotly_chart(fig)

    # Ringkasan per cluster
    st.subheader("ðŸ“Œ Rata-rata Setiap Fitur per Cluster")
    st.dataframe(customer_summary.groupby('Cluster')[['Total Pendapatan', 'Total Service', 'Rata-rata Harga Layanan']].mean().round(2))

else:
    st.info("Silakan upload file CSV untuk memulai analisis.")